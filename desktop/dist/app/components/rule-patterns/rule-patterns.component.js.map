{"version":3,"file":"rule-patterns.component.js","sourceRoot":"","sources":["../../../src/app/components/rule-patterns/rule-patterns.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\nimport { MaterializeDirective } from 'angular2-materialize';\nimport { Dragula, DragulaService } from 'ng2-dragula/ng2-dragula';\n\nimport { PayloadByteextractComponent } from '../payload-byteextract';\nimport { PayloadBytejumpComponent } from '../payload-bytejump';\nimport { PayloadBytetestComponent } from '../payload-bytetest';\nimport { PayloadContentComponent } from '../payload-content';\nimport { PayloadFlowbitsComponent } from '../payload-flowbits';\nimport { PayloadModifierComponent } from '../payload-modifier';\nimport { PayloadRegexComponent } from '../payload-regex';\n\nimport { Rule } from '../../shared/rule';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-rule-patterns',\n  templateUrl: 'rule-patterns.component.html',\n  styleUrls: ['rule-patterns.component.css'],\n  directives: [MaterializeDirective,\n                Dragula,\n                PayloadByteextractComponent,\n                PayloadBytejumpComponent,\n                PayloadBytetestComponent,\n                PayloadContentComponent,\n                PayloadFlowbitsComponent,\n                PayloadModifierComponent,\n                PayloadRegexComponent],\n  providers: [DragulaService]\n})\nexport class RulePatternsComponent {\n  @Input() rule: Rule;\n  byteExtracts: number;\n  input: string;\n  output: string;\n\n  constructor(private drag: DragulaService) {\n    this.byteExtracts = 0;\n    drag.setOptions('rule-patterns', {\n      moves: function (el, container, handle) {\n        return handle.className === 'material-icons';\n      }\n    });\n  }\n\n  add(payloadType: string) {\n    if (payloadType != 'byteextract' || this.byteExtracts < 2) {\n      this.rule.payloads.push({t: payloadType});\n    }\n    if (payloadType == 'byteextract') {\n      this.byteExtracts += 1;\n    }\n  }\n\n  remove(id: number) {\n    if (this.rule.payloads[id].t == 'byteextract') {\n      this.byteExtracts -= 1;\n    }\n    this.rule.payloads.splice(id, 1);\n  }\n\n  to_ascii() {\n    this.output = '';\n    if (!this.input) {\n      return;\n    }\n    let str = this.input.replace(/ /g, '');\n    for (let c = 0; c < str.length; c += 2) {\n      this.output += String.fromCharCode(parseInt(str.substr(c, 2), 16));\n    }\n  }\n\n  to_hex() {\n    this.output = '';\n    if (!this.input) {\n      return;\n    }\n    let o = [];\n    for (let c = 0; c < this.input.length; c++) {\n      o.push(this.input.charCodeAt(c).toString(16));\n    }\n    this.output = o.join(' ');\n  }\n\n}\n"]}