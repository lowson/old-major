{"version":3,"file":"rule.js","sourceRoot":"","sources":["../../src/app/shared/rule.ts"],"names":[],"mappings":"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","sourcesContent":["export class Rule {\n  enabled: boolean;\n  action: string;\n  proto: string;\n  src: string;\n  sport: string;\n  dir: string;\n  dst: string;\n  dport: string;\n  opts: any;\n  references: any[];\n  metadata: any[];\n  payloads: any[];\n\n  constructor(data?: any) {\n    data = data || {};\n    this.enabled = data.enabled || true;\n    this.action = data.action || 'alert';\n    this.proto = data.proto || 'tcp';\n    this.src = data.src || '';\n    this.sport = data.sport || '';\n    this.dir = data.dir || '->';\n    this.dst = data.dst || '';\n    this.dport = data.dport || '';\n    this.opts = {\n      classtype: 'trojan-activity',\n      sid: 1000000,\n      rev: 1\n    };\n    this.references = [{\n      type: 'url',\n      value: ''\n    }];\n    this.metadata = [{\n      k: '',\n      v: ''\n    }];\n    this.payloads = [];\n  }\n\n  get options() {\n    let rulePieces = [];\n\n    if (this.opts.msg) {\n      rulePieces.push('msg:\"' + this.opts.msg + '\"');\n    }\n\n    if (this.opts.flow) {\n      let f = 'flow:' + (this.opts.flow);\n      if (this.opts.flow_dir) {\n        f += ',' + (this.opts.flow_dir);\n      }\n      if (this.opts.flow_stream) {\n        f += ',' + (this.opts.flow_stream);\n      }\n      if (this.opts.flow_frag) {\n        f += ',' + (this.opts.flow_frag);\n      }\n      rulePieces.push(f);\n    }\n\n    if (this.opts.frag_offset) {\n      let fragoffset = 'fragoffset:';\n      fragoffset += this.opts.frag_offset_mod || '!';\n      fragoffset += this.opts.frag_offset;\n      rulePieces.push(fragoffset);\n    }\n\n    if (this.opts.frag_m || this.opts.frag_d || this.opts.frag_r) {\n      let fragbits = 'fragbits:';\n      if (this.opts.frag_mod == 'not') {\n        fragbits += '!';\n      }\n      fragbits += [\n        (this.opts.frag_m ? 'M' : ''),\n        (this.opts.frag_d ? 'D' : ''),\n        (this.opts.frag_r ? 'R' : '')\n      ].join('');\n      if (this.opts.frag_mod == 'plus') {\n        fragbits += '+';\n      }\n      if (this.opts.frag_mod == 'any') {\n        fragbits += '*';\n      }\n      rulePieces.push(fragbits);\n    }\n\n    if (this.opts.flags_none_chk) {\n      if (this.opts.flags_mod == 'not') {\n        rulePieces.push('flags:!0');\n      } else {\n        let flags = 'flags:0';\n        if (this.opts.flags_mod == 'plus') {\n          flags += '+';\n        }\n        if (this.opts.flags_mod == 'any') {\n          flags += '*';\n        }\n        rulePieces.push(flags);\n      }\n    } else {\n      let flagString = 'flags:';\n      if (this.opts.flags_mod == 'not') {\n        flagString += '!';\n      }\n      let includeFlags = '';\n      let excludeFlags = '';\n\n      if (this.opts.flags_fin_chk) {\n        if (this.opts.flags_fin) {\n          includeFlags += 'F';\n        } else {\n          excludeFlags += 'F';\n        }\n      }\n\n      if (this.opts.flags_syn_chk) {\n        if (this.opts.flags_syn) {\n          includeFlags += 'S';\n        } else {\n          excludeFlags += 'S';\n        }\n      }\n\n      if (this.opts.flags_rst_chk) {\n        if (this.opts.flags_rst) {\n          includeFlags += 'R';\n        } else {\n          excludeFlags += 'R';\n        }\n      }\n\n      if (this.opts.flags_psh_chk) {\n        if (this.opts.flags_psh) {\n          includeFlags += 'P';\n        } else {\n          excludeFlags += 'P';\n        }\n      }\n\n      if (this.opts.flags_ack_chk) {\n        if (this.opts.flags_ack) {\n          includeFlags += 'A';\n        } else {\n          excludeFlags += 'A';\n        }\n      }\n\n      if (this.opts.flags_urg_chk) {\n        if (this.opts.flags_urg) {\n          includeFlags += 'U';\n        } else {\n          excludeFlags += 'U';\n        }\n      }\n\n      if (this.opts.flags_cwr_chk) {\n        if (this.opts.flags_cwr) {\n          includeFlags += 'C';\n        } else {\n          excludeFlags += 'C';\n        }\n      }\n\n      if (this.opts.flags_ece_chk) {\n        if (this.opts.flags_ece) {\n          includeFlags += 'E';\n        } else {\n          excludeFlags += 'E';\n        }\n      }\n\n      if (includeFlags) {\n        flagString += includeFlags;\n        if (this.opts.flags_mod == 'plus') {\n          flagString += '+';\n        }\n        if (this.opts.flags_mod == 'any') {\n          flagString += '*';\n        }\n        if (excludeFlags) {\n          flagString += ',' + excludeFlags;\n        }\n        rulePieces.push(flagString);\n      }\n    }\n\n    if (this.opts.ttl) {\n      rulePieces.push('ttl:' + this.opts.ttl);\n    }\n    if (this.opts.tos) {\n      rulePieces.push('tos:' + this.opts.tos);\n    }\n    if (this.opts.same_ip) {\n      rulePieces.push('sameip');\n    }\n    if (this.opts.ipopts) {\n      rulePieces.push('ipopts:' + this.opts.ipopts);\n    }\n    if (this.opts.ip_id) {\n      rulePieces.push('id:' + this.opts.ip_id);\n    }\n    if (this.opts.ip_proto) {\n      rulePieces.push('ip_proto:' + this.opts.ip_proto);\n    }\n    if (this.opts.tcp_seq) {\n      rulePieces.push('seq:' + this.opts.tcp_seq);\n    }\n    if (this.opts.tcp_ack) {\n      rulePieces.push('ack:' + this.opts.tcp_ack);\n    }\n    if (this.opts.tcp_win_size) {\n      rulePieces.push('window:' + this.opts.tcp_win_size);\n    }\n    if (this.opts.icmp_type) {\n      rulePieces.push('itype:' + this.opts.icmp_type);\n    }\n    if (this.opts.icmp_code) {\n      rulePieces.push('icode:' + this.opts.icmp_code);\n    }\n    if (this.opts.icmp_id) {\n      rulePieces.push('icmp_id:' + this.opts.icmp_id);\n    }\n    if (this.opts.icmp_seq) {\n      rulePieces.push('icmp_seq:' + this.opts.icmp_seq);\n    }\n\n\n    for (let bit of this.payloads) {\n\n      if (bit.t == 'modifier' && bit.val) {\n        rulePieces.push(bit.val);\n      }\n\n      if (bit.t == 'regex' && bit.regex) {\n        let pcre = 'pcre:';\n        if (bit.inverted) {\n          pcre += '!';\n        }\n        pcre += '\"/' + bit.regex + '/' + [\n          (bit.flag_i ? 'i' : ''),\n          (bit.flag_s ? 's' : ''),\n          (bit.flag_m ? 'm' : ''),\n          (bit.flag_x ? 'x' : ''),\n          (bit.flag_A ? 'A' : ''),\n          (bit.flag_E ? 'E' : ''),\n          (bit.flag_G ? 'G' : ''),\n          (bit.flag_R ? 'R' : ''),\n          (bit.flag_U ? 'U' : ''),\n          (bit.flag_I ? 'I' : ''),\n          (bit.flag_P ? 'P' : ''),\n          (bit.flag_H ? 'H' : ''),\n          (bit.flag_D ? 'D' : ''),\n          (bit.flag_M ? 'M' : ''),\n          (bit.flag_C ? 'C' : ''),\n          (bit.flag_K ? 'K' : ''),\n          (bit.flag_S ? 'S' : ''),\n          (bit.flag_Y ? 'Y' : ''),\n          (bit.flag_B ? 'B' : ''),\n          (bit.flag_O ? 'O' : '')\n        ].join('') + '\"';\n        rulePieces.push(pcre);\n      }\n\n      if (bit.t == 'content' && bit.pattern) {\n        if (bit.content_filter_type) {\n          let s = 'protected_content:';\n          if (bit.content_inverted) {\n            s += '!';\n          }\n          s += '\"' + bit.pattern + '\"';\n          rulePieces.push(s);\n          rulePieces.push('hash:' + (bit.hash || 'md5'));\n          rulePieces.push('length:' + bit.original_length);\n        } else {\n          let s = 'content:';\n          if (bit.content_inverted) {\n            s += '!';\n          }\n          s += '\"' + bit.pattern + '\"';\n          rulePieces.push(s);\n        }\n\n        if (bit.fast_pattern) {\n          if (bit.fast_pattern == 'simple') {\n            rulePieces.push('fast_pattern');\n          } else if (bit.fast_pattern == 'only') {\n            rulePieces.push('fast_pattern:only');\n          } else if (bit.fast_pattern == 'args') {\n            let fastPattern = 'fast_pattern:';\n            fastPattern += bit.fast_pattern_offset;\n            fastPattern += ',' + bit.fast_pattern_length;\n            rulePieces.push(fastPattern);\n          }\n        }\n\n        if (!bit.mod_raw) {\n          if (!bit.uri_content_pattern &&\n              bit.restrict_body) {\n            rulePieces.push('http_client_body');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_cookie &&\n              !bit.fast_pattern) {\n            rulePieces.push('http_cookie');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_raw_cookie &&\n              !bit.fast_pattern &&\n              !bit.restrict_cookie) {\n            rulePieces.push('http_raw_cookie');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_header) {\n            rulePieces.push('http_header');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_raw_header &&\n              !bit.fast_pattern &&\n              !bit.restrict_header) {\n            rulePieces.push('http_raw_header');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_method &&\n              !bit.fast_pattern) {\n            rulePieces.push('http_method');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_uri) {\n            rulePieces.push('http_uri');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_raw_uri &&\n              !bit.fast_pattern &&\n              !bit.restrict_uri) {\n            rulePieces.push('http_raw_uri');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_stat_code &&\n              !bit.fast_pattern) {\n            rulePieces.push('http_stat_code');\n          }\n          if (!bit.uri_content_pattern &&\n              bit.restrict_stat_msg &&\n              !bit.fast_pattern) {\n            rulePieces.push('http_stat_msg');\n          }\n\n          if (bit.uri_content_pattern) {\n            let uriContent = 'uricontent:';\n            if (bit.uri_content_inverted) {\n              uriContent += '!';\n            }\n            uriContent += '\"' + bit.uri_content_pattern + '\"';\n            rulePieces.push(uriContent);\n          }\n        }\n\n        if (bit.uri_length) {\n          let uriLen = 'urilen:' + bit.uri_length;\n          if (bit.uri_length_mod) {\n            uriLen += ',' + bit.uri_length_mod;\n          }\n          rulePieces.push(uriLen);\n        }\n\n        if (bit.depth) {\n          rulePieces.push('depth:' + bit.depth);\n        }\n        if (bit.offset) {\n          rulePieces.push('offset:' + bit.offset);\n        }\n        if (bit.distance) {\n          rulePieces.push('distance:' + bit.distance);\n        }\n        if (bit.within) {\n          rulePieces.push('within:' + bit.within);\n        }\n        if (bit.mod_cvs && !bit.uricontent) {\n          rulePieces.push('cvs:invalid-entry');\n        }\n        if (bit.mod_ftp && !bit.uricontent) {\n          rulePieces.push('ftpbounce');\n        }\n        if (bit.mod_case) {\n          rulePieces.push('nocase');\n        }\n        if (bit.mod_raw) {\n          rulePieces.push('rawbytes');\n        }\n\n        if (bit.isdataat) {\n          let d = 'isdataat:';\n          if (bit.isdataat_inverted) {\n            d += '!';\n          }\n          d += bit.isdataat;\n          if (bit.isdataat_mod) {\n            d += ',' + bit.isdataat_mod;\n          }\n          rulePieces.push(d);\n        }\n      }\n\n      if (bit.t == 'flowbits' &&\n          (bit.flowbits || bit.action == 'noalert' || bit.action == 'reset')) {\n        let f = 'flowbits:' + (bit.action || 'set');\n        if (bit.flowbits) {\n          f += ',' + bit.flowbits;\n        }\n        if (bit.group) {\n          f += ',' + bit.group;\n        }\n        rulePieces.push(f);\n      }\n\n      if (bit.t == 'bytetest' && bit.bytes && bit.offset && bit.value) {\n        let s = 'byte_test:' + bit.bytes;\n        s += ',' + (bit.negate_operator ? '!' : '') + (bit.operator || '<');\n        s += ',' + bit.value;\n        s += ',' + bit.offset;\n        if (bit.relative) {\n          s += ',relative';\n        }\n        s += ',' + (bit.endian || 'big');\n        if (bit.string) {\n          s += ',string,' + (bit.string_type || 'hex');\n        }\n        if (bit.dce) {\n          s += ',dce';\n        }\n        rulePieces.push(s);\n      }\n\n      if (bit.t == 'bytejump' && bit.bytes && bit.offset) {\n        let s = 'byte_jump:' + bit.bytes;\n        s += ',' + bit.offset;\n        if (bit.relative) {\n          s += ',relative';\n        }\n        if (bit.multiplier) {\n          s += ',multiplier ' + bit.multiplier;\n        }\n        s += ',' + (bit.endian || 'big');\n        if (bit.string) {\n          s += ',string,' + (bit.string_type || 'hex');\n        }\n        if (bit.align) {\n          s += ',align';\n        }\n        if (bit.from_beginning) {\n          s += ',from_beginning';\n        }\n        if (bit.post_offset) {\n          s += ',post_offset ' + bit.post_offset;\n        }\n        if (bit.dce) {\n          s += ',dce';\n        }\n        rulePieces.push(s);\n      }\n\n      if (bit.t == 'byteextract' && bit.bytes && bit.offset && bit.name) {\n        let s = 'byte_jump:' + bit.bytes;\n        s += ',' + bit.offset;\n        s += ',' + bit.name;\n        if (bit.relative) {\n          s += ',relative';\n        }\n        if (bit.multiplier) {\n          s += ',multiplier ' + bit.multiplier;\n        }\n        s += ',' + (bit.endian || 'big');\n        if (bit.string) {\n          s += ',string,' + (bit.string_type || 'hex');\n        }\n        if (bit.align) {\n          s += ',align';\n        }\n        if (bit.dce) {\n          s += ',dce';\n        }\n        rulePieces.push(s);\n      }\n    }\n\n    if (this.opts.logto) {\n      rulePieces.push('logto:' + this.opts.logto);\n    }\n    if (this.opts.session) {\n      rulePieces.push('session:' + this.opts.session);\n    }\n    if (this.opts.activates) {\n      rulePieces.push('activates:' + this.opts.activates);\n    }\n    if (this.opts.activated_by) {\n      rulePieces.push('activated_by:' + this.opts.activated_by);\n    }\n    if (this.opts.count) {\n      rulePieces.push('count:' + this.opts.count);\n    }\n\n    if (this.opts.tag_count) {\n      if (this.opts.tag_type == 'session') {\n        let tag = 'tag:session,' + this.opts.tag_count + ',';\n        tag += (this.opts.tag_unit || 'packets');\n        if (this.opts.tag_exclusive) {\n          tag += ',exclusive';\n        }\n        rulePieces.push(tag);\n      } else {\n        let tag = 'tag:host,' + this.opts.tag_count + ',';\n        tag += (this.opts.tag_unit || 'packets') + ',';\n        tag += (this.opts.tag_direction || 'src');\n        rulePieces.push(tag);\n      }\n    }\n\n    if (this.opts.threshold_count && this.opts.threshold_seconds) {\n      let threshold = 'threshold: type ' + (this.opts.threshold_action || 'limit');\n      threshold += ',track ' + (this.opts.threshold_track || 'by_src');\n      threshold += ',count ' + this.opts.threshold_count;\n      threshold += ',seconds ' + this.opts.threshold_seconds;\n      rulePieces.push(threshold);\n    }\n\n    if (this.opts.detection_filter_count && this.opts.detection_filter_seconds) {\n      let filter = 'detection_filter:track ' + (this.opts.detection_filter_track || 'by_src');\n      filter += ',count ' + this.opts.detection_filter_count;\n      filter += ',seconds ' + this.opts.detection_filter_seconds;\n      rulePieces.push(filter);\n    }\n\n    for (let i of this.references) {\n      if (i.value) {\n        rulePieces.push('reference:' + i.type + ' ' + i.value);\n      }\n    }\n\n    for (let i of this.metadata) {\n      if (i.k && i.v) {\n        rulePieces.push('metadata:' + i.k + ' ' + i.v);\n      }\n    }\n\n    rulePieces.push('classtype:' + (this.opts.classtype || 'attempted-admin'));\n\n    if (this.opts.priority) {\n      rulePieces.push('priority:' + this.opts.priority);\n    }\n    if (this.opts.sid) {\n      rulePieces.push('sid:' + this.opts.sid);\n    }\n    if (this.opts.rev) {\n      rulePieces.push('rev:' + this.opts.rev);\n    }\n    return rulePieces.length ? '(' + rulePieces.join('; ') + ';)' : '';\n  }\n}\n"]}